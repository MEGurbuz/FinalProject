using DataAccsessLayer.Concrate;
using EntityLayer.Concrate;

using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using PentestProject.Models;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Threading.Tasks;

namespace PentestProject.Controllers
{
    public class HomeController : Controller
    {
        private readonly ILogger<HomeController> _logger;

        private readonly Context _context;

       



        public HomeController(ILogger<HomeController> logger, Context context )
        {
            _context = context;
            _logger = logger;
        }

        [HttpGet]
        public IActionResult Index()
        {
            ViewBag.writerList = _context.Writers.ToList();
            return View();
        }

        [HttpPost]
        public IActionResult Index(Writer writer)
        {
            _context.Add(writer);
            _context.SaveChanges();

            
            return RedirectToAction(nameof(Index));
        }

        public async Task<IActionResult> sil_(int id)
        {
            var Silenecek_Kisi = await _context.Writers.FindAsync(id);
            _context.Remove(Silenecek_Kisi);
            await _context.SaveChangesAsync();
            return  RedirectToAction(nameof(Index));
        }

        public IActionResult Privacy()
        {
            return View();
        }

        [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]
        public IActionResult Error()
        {
            return View(new ErrorViewModel { RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier });
        }

        public IActionResult Test()
        {
            return View();
        }

    }
}
